#!/usr/bin/env python
PACKAGE = "dynamic_tutorials"

import roslib;roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("Pan_KP", double_t, 0, "Pan KP", .0, 0, 1)
gen.add("Pan_KI", double_t, 0, "Pan KI", .0, 0, 1)
gen.add("Pan_KD", double_t, 0, "Pan KD", .0, 0, 1)

gen.add("Tilt_KP", double_t, 0, "Tilt KP", .0, 0, 1)
gen.add("Tilt_KI", double_t, 0, "Tilt KI", .0, 0, 1)
gen.add("Tilt_KD", double_t, 0, "Tilt KD", .0, 0, 1)

gen.add("Pan_Step", double_t, 0, "Pan Step", .0, 0, 2)
gen.add("Tilt_Step", double_t, 0, "Tilt Step", .0, 0, 2)

gen.add("Scan_Rate", int_t, 0, "Scan rate", 0, 0, 10)

# gen.add("int_param", int_t, 0, "An Integer parameter", 50, 0, 100)
# gen.add("double_param", double_t, 0, "A double parameter", .5, 0, 1)
# gen.add("str_param", str_t, 0, "A string parameter", "Hello World")
# gen.add("bool_param", bool_t, 0, "A Boolean parameter", True)
# size_enum = gen.enum([ gen.const("Small", int_t, 0, "A small constant"),
#                   gen.const("Medium", int_t, 1, "A medium constant"),
#                   gen.const("Large", int_t, 2, "A large constant"),
#                   gen.const("ExtraLarge", int_t, 3, "An extra large constant") ],
#                   "An enum to set size")

# gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "dynamic_tutorials", "Tutorials"))